#!/bin/bash
#
# Copyright (C) 2008-2010 by JCF Ploemen <linux@jp.pp.ru>
# released under GPL, version 2 or later

################################################
#                                              #
#  TO CONFIGURE EDIT /etc/default/sabnzbdplus  #
#                                              #
################################################

### BEGIN INIT INFO
# Provides:          sabnzbdplus
# Required-Start:    $local_fs $network $remote_fs
# Required-Stop:     $local_fs $network $remote_fs
# Should-Start:      NetworkManager
# Should-Stop:       NetworkManager
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: SABnzbd+ binary newsgrabber
### END INIT INFO
DESC="SABnzbd+ binary newsgrabber"
APPPATH=/opt/
CONFIG="/opt/SABnzbd/sabnzbd.ini"
PYTHONEXEC="/usr/bin/python"
DAEMON=/opt/SABnzbd/SABnzbd.py
USER="sabnzbd"
if [ -f "$CONFIG" ]; then
	PORT=$(grep -m 1 "^port" '${INSTALLDIR}'/SABnzbd/sabnzbd.ini | awk '${FAKE}')
else
	PORT="8080"
fi
#sabnzbd_port.pid
PIDFILE="/var/run/sabnzbd-$PORT.pid"
DEFOPTS=" -OO $DAEMON --daemon --pid /var/run/"
#
# these are only accepted from the settings file
#unset USER CONFIG HOST PORT EXTRAOPTS

. /lib/lsb/init-functions

is_running()
{
# returns 0 when running, 1 otherwise
if [ -f $PIDFILE ]; then
	PID=`cat $PIDFILE`
	return 0
fi
return 1
}

load_settings()
{
HOST="0.0.0.0" #Set SABnzbd address here.
EXTRAOPTS=""
OPTIONS="$DEFOPTS"
[ -n "$CONFIG" ] && OPTIONS="$OPTIONS --config-file $CONFIG"
[ -n "$HOST" ] && SERVER="$HOST" || SERVER=
[ -n "$PORT" ] && SERVER="$SERVER:$PORT"
[ -n "$SERVER" ] && OPTIONS="$OPTIONS --server $SERVER"
[ -n "$EXTRAOPTS" ] && OPTIONS="$OPTIONS $EXTRAOPTS"
}

start_sab()
{
load_settings;
if ! is_running; then
	log_daemon_msg "Starting $DESC"
	start-stop-daemon --quiet --pidfile $PIDFILE --chuid $USER --start --exec $PYTHONEXEC -- $OPTIONS
else
	log_success_msg "$DESC: already running (pid $PID)"
fi
}

stop_sab()
{
load_settings;
if is_running; then
	TMPFILE=$(mktemp /tmp/sabnzbdplus.XXXXXXXXXX || exit 1)
	trap "[ -f $TMPFILE ] && rm -f $TMPFILE" EXIT
	echo "$PID" > $TMPFILE
	log_daemon_msg "Stopping $DESC"
	start-stop-daemon --stop --user $USER --pidfile $TMPFILE --retry 30
else
	log_success_msg "$DESC: not running"
fi
[ -f $PIDFILE ] && rm -f $PIDFILE
}

case "$1" in
        start)
                start_sab
        ;;
        stop)
                stop_sab
        ;;
        force-reload|restart)
                stop_sab
                start_sab
        ;;
        update)
                stop_sab
                up_sab
                start_sab
        ;;
        status)
                if is_running; then
                log_success_msg "$DESC: running (pid $PID)"
					else
                log_success_msg "$DESC: not running"
                [ -f $PIDFILE ] && exit 1 || exit 3
                fi
        ;;
        *)
                log_failure_msg "Usage: $0 {start|stop|restart|force-reload|update|status}"
                exit 3
        ;;
esac

exit 0